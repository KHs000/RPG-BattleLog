/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package rpg;

import java.awt.Color;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractButton;
import javax.swing.ButtonModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

/**
 *
 * @author Felipe Rabelo
 */
public class JanelaAlteraFichaIten extends javax.swing.JFrame {
    
    private String nameIten;

    /**
     * Creates new form JanelaAlteraFichaIten
     */
    public JanelaAlteraFichaIten() {
        initComponents();
    }
    
    public JanelaAlteraFichaIten (String name) {
        nameIten = name;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        radioEquip = new javax.swing.JRadioButton();
        radioWeapon = new javax.swing.JRadioButton();
        radioPotion = new javax.swing.JRadioButton();
        radioCustom = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        description = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        con = new javax.swing.JTextField();
        wil = new javax.swing.JTextField();
        vig = new javax.swing.JTextField();
        wis = new javax.swing.JTextField();
        str = new javax.swing.JTextField();
        Int = new javax.swing.JTextField();
        dex = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        hp = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        mp = new javax.swing.JTextField();
        armor = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        damage = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        water = new javax.swing.JTextField();
        fire = new javax.swing.JTextField();
        earth = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        light = new javax.swing.JTextField();
        wind = new javax.swing.JTextField();
        black = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        neutralE = new javax.swing.JCheckBox();
        fireE = new javax.swing.JCheckBox();
        waterE = new javax.swing.JCheckBox();
        earthE = new javax.swing.JCheckBox();
        windE = new javax.swing.JCheckBox();
        lightE = new javax.swing.JCheckBox();
        blackE = new javax.swing.JCheckBox();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel28 = new javax.swing.JLabel();
        radioYes = new javax.swing.JRadioButton();
        jLabel29 = new javax.swing.JLabel();
        radioNo = new javax.swing.JRadioButton();
        jLabel30 = new javax.swing.JLabel();
        skill = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Item");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jLabel1.setText("Name:");

        jLabel2.setText("Type:");

        buttonGroup1.add(radioEquip);
        radioEquip.setText("Equipment");
        radioEquip.setActionCommand("equip");

        buttonGroup1.add(radioWeapon);
        radioWeapon.setText("Weapon");
        radioWeapon.setActionCommand("weapon");

        buttonGroup1.add(radioPotion);
        radioPotion.setText("Potion");
        radioPotion.setActionCommand("potion");

        buttonGroup1.add(radioCustom);
        radioCustom.setText("Custom");
        radioCustom.setActionCommand("custom");

        jLabel3.setText("Description:");

        description.setColumns(20);
        description.setRows(5);
        jScrollPane1.setViewportView(description);

        jLabel4.setText("STR:");

        jLabel5.setText("WIS:");

        jLabel6.setText("VIG:");

        jLabel7.setText("WIL:");

        jLabel8.setText("CON:");

        jLabel9.setText("INT:");

        jLabel10.setText("DEX:");

        jLabel11.setText("Healing - HP:");

        jLabel12.setText("Healing - MP:");

        jLabel13.setText("Armor:");

        jLabel14.setText("Damage:");

        jLabel15.setText("Fire:");

        jLabel16.setText("Water:");

        jLabel17.setText("Earth:");

        jLabel18.setText("%");

        jLabel19.setText("%");

        jLabel20.setText("%");

        jLabel21.setText("Wind:");

        jLabel22.setText("Light:");

        jLabel23.setText("Black:");

        jLabel24.setText("%");

        jLabel25.setText("%");

        jLabel26.setText("%");

        jLabel27.setText("Element:");

        neutralE.setText("Neutral");

        fireE.setText("Fire");

        waterE.setText("Water");

        earthE.setText("Earth");

        windE.setText("Wind");

        lightE.setText("Light");

        blackE.setText("Black");

        jLabel28.setText("Skill - ");

        buttonGroup2.add(radioYes);
        radioYes.setText("Yes");
        radioYes.setActionCommand("yes");

        jLabel29.setText("/");

        buttonGroup2.add(radioNo);
        radioNo.setSelected(true);
        radioNo.setText("No");
        radioNo.setActionCommand("no");

        jLabel30.setText("Skill name:");

        jButton1.setText("Salvar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Voltar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addComponent(jSeparator2)
            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel30)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(skill))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(radioEquip)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(radioWeapon)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(radioPotion)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(radioCustom))
                                .addComponent(jLabel3)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(name))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                            .addComponent(jLabel8)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                                        .addGroup(layout.createSequentialGroup()
                                                            .addComponent(jLabel7)
                                                            .addGap(1, 1, 1)))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel6)
                                                        .addGap(3, 3, 3)))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel5)
                                                    .addGap(6, 6, 6)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel4)
                                                .addGap(1, 1, 1)))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(1, 1, 1))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jLabel9)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(dex)
                                        .addComponent(wil)
                                        .addComponent(con)
                                        .addComponent(str, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(wis, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(vig, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(Int, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jLabel13)
                                                    .addComponent(jLabel12))
                                                .addGap(3, 3, 3)))
                                        .addComponent(jLabel14)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel16)
                                                .addComponent(jLabel15)
                                                .addComponent(jLabel17))
                                            .addGap(6, 6, 6)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(earth, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                                                .addComponent(fire)
                                                .addComponent(water))))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(mp, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(armor, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(damage, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel19)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(jLabel22))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel18)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(jLabel21))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel20)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(jLabel23)))
                                            .addGap(8, 8, 8)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(black, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                                                .addComponent(light)
                                                .addComponent(wind)))
                                        .addComponent(hp))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel27)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(neutralE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(42, 42, 42)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(fireE)
                                                .addComponent(waterE)
                                                .addComponent(earthE)))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel24)
                                            .addGap(31, 31, 31)
                                            .addComponent(windE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel25)
                                            .addGap(31, 31, 31)
                                            .addComponent(lightE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel26)
                                            .addGap(31, 31, 31)
                                            .addComponent(blackE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel28)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radioYes)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel29)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radioNo)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(radioEquip)
                    .addComponent(radioWeapon)
                    .addComponent(radioPotion)
                    .addComponent(radioCustom))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(str, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(hp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel27)
                    .addComponent(neutralE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(wis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(mp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fireE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(vig, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(armor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(waterE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(wil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(damage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(earthE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(con, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(fire, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(jLabel21)
                    .addComponent(wind, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24)
                    .addComponent(windE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Int, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel16)
                    .addComponent(water, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(jLabel22)
                    .addComponent(light, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25)
                    .addComponent(lightE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(dex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(earth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20)
                    .addComponent(jLabel23)
                    .addComponent(black, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26)
                    .addComponent(blackE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioYes)
                    .addComponent(jLabel28)
                    .addComponent(jLabel29)
                    .addComponent(radioNo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(skill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (evt.getSource() == jButton1) {
            String nome = name.getText();
            int [] type = {0, 0, 0, 0};
            switch (buttonGroup1.getSelection().getActionCommand()) {
                case "equip":
                    type[0] = 1;
                    break;
                case "weapon":
                    type[1] = 1;
                    break;
                case "potion":
                    type[2] = 1;
                    break;
                case "custom":
                    type[3] = 1;
                    break;
            }
            String descriptionText = "";
            if (!description.getText().equals("")) {descriptionText = description.getText();}
            int strText = 0;
            if (!con.getText().equals("")) {strText = Integer.valueOf(con.getText());}
            int wisText = 0;
            if (!wil.getText().equals("")) {wisText = Integer.valueOf(wil.getText());}
            int vigText = 0;
            if (!vig.getText().equals("")) {vigText = Integer.valueOf(vig.getText());}
            int wilText = 0;
            if (!wis.getText().equals("")) {wilText = Integer.valueOf(wis.getText());}
            int conText = 0;
            if (!str.getText().equals("")) {conText = Integer.valueOf(str.getText());}
            int IntText = 0;
            if (!Int.getText().equals("")) {IntText = Integer.valueOf(Int.getText());}
            int dexText = 0;
            if (!dex.getText().equals("")) {dexText = Integer.valueOf(dex.getText());}
            int hpText = 0;
            if (!hp.getText().equals("")) {hpText = Integer.valueOf(hp.getText());}
            int mpText = 0;
            if (!mp.getText().equals("")) {mpText = Integer.valueOf(mp.getText());}
            int arm = 0;
            if (!armor.getText().equals("")) {arm = Integer.valueOf(armor.getText());}
            int dam = 0;
            if (!damage.getText().equals("")) {dam = Integer.valueOf(damage.getText());}
            int [] resistence = new int [6];
            resistence[0] = 0;
            if (!water.getText().equals("")) {resistence[0] = Integer.valueOf(water.getText());}
            resistence[1] = 0;
            if (!fire.getText().equals("")) {resistence[1] = Integer.valueOf(fire.getText());}
            resistence[2] = 0;
            if (!earth.getText().equals("")) {resistence[2] = Integer.valueOf(earth.getText());}
            resistence[3] = 0;
            if (!light.getText().equals("")) {resistence[3] = Integer.valueOf(light.getText());}
            resistence[4] = 0;
            if (!wind.getText().equals("")) {resistence[4] = Integer.valueOf(wind.getText());}
            resistence[5] = 0;
            if (!black.getText().equals("")) {resistence[5] = Integer.valueOf(black.getText());}
            int [] element = {0, 0, 0, 0, 0, 0, 0};
            if (neutralE.isSelected()) {element[0] = 1;}
            if (fireE.isSelected()) {element[1] = 1;}
            if (waterE.isSelected()) {element[2] = 1;}
            if (earthE.isSelected()) {element[3] = 1;}
            if (windE.isSelected()) {element[4] = 1;}
            if (lightE.isSelected()) {element[5] = 1;}
            if (blackE.isSelected()) {element[6] = 1;}
            String skillText = "";
            if (!skill.getText().equals("")) {skillText = skill.getText();}
            
            try {
                Iten iten = new Iten ();
                iten.setName(nome);iten.setType(type);iten.setDescription(descriptionText);
                iten.setSTR(strText);iten.setWIS(wisText);iten.setVIG(vigText);iten.setWIL(wilText);
                iten.setCON(conText);iten.setINT(IntText);iten.setDEX(dexText);iten.setArm(arm);
                iten.setHP(hpText);iten.setMANA(mpText);iten.setDam(dam);iten.setResistence(resistence);
                iten.setElement(element);iten.setSkill(skillText);
                
                iten.gravaItem();
            } catch (IOException ex) {
                Logger.getLogger(JanelaConfiguraItens.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (evt.getSource() == jButton2) {
            try {
                this.dispose();
                
                JanelaEditarIten obj = new JanelaEditarIten();
                obj.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                obj.setLocation(500, 30);
                obj.setSize(400, 400);
                obj.setVisible(true);
            } catch (IOException ex) {
                Logger.getLogger(JanelaAlteraFichaIten.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        ItenRead iten = new ItenRead (nameIten);
        
        name.setText(iten.getName());
        switch (iten.getType()) {
            case "0":
                radioEquip.setSelected(true);
                break;
            case "1":
                radioWeapon.setSelected(true);
                break;
            case "2":
                radioPotion.setSelected(true);
                break;
            case "3":
                radioCustom.setSelected(true);
                break;
        }
        description.setText(iten.getDescription());
        str.setText(iten.getSTR());
        wis.setText(iten.getWIS());
        vig.setText(iten.getVIG());
        wil.setText(iten.getWIL());
        con.setText(iten.getCON());
        Int.setText(iten.getINT());
        dex.setText(iten.getDEX());
        hp.setText(iten.getHP());
        mp.setText(iten.getMP());
        armor.setText(iten.getArmor());
        damage.setText(iten.getWeapon());
        fire.setText(iten.getResistenceFire());
        water.setText(iten.getResistenceWater());
        earth.setText(iten.getResistenceEarth());
        wind.setText(iten.getResistenceWind());
        light.setText(iten.getResistenceLight());
        black.setText(iten.getResistenceBlack());
        if (iten.getElementNeutral().equals("1")) {neutralE.setSelected(true);}
        if (iten.getElementFire().equals("1")) {fireE.setSelected(true);}
        if (iten.getElementWater().equals("1")) {waterE.setSelected(true);}
        if (iten.getElementEarth().equals("1")) {earthE.setSelected(true);}
        if (iten.getElementWind().equals("1")) {windE.setSelected(true);}
        if (iten.getElementLight().equals("1")) {lightE.setSelected(true);}
        if (iten.getElementBlack().equals("1")) {blackE.setSelected(true);}
        skill.setText(iten.getSkill());
        
        skill.setEditable(false);
        skill.setBackground(Color.LIGHT_GRAY);
        if (!skill.getText().equals("")) {
            skill.setEditable(true);
            skill.setBackground(Color.WHITE);
            radioYes.setSelected(true);
        }
        ChangeListener skillChangeListener = (ChangeEvent change) -> {
            AbstractButton aButton = (AbstractButton)change.getSource();
            ButtonModel aModel = aButton.getModel();
            boolean selected = aModel.isSelected();
            
            if (selected) {
                skill.setEditable(true);
                skill.setBackground(Color.WHITE);
            } else {
                skill.setEditable(false);
                skill.setBackground(Color.LIGHT_GRAY);
                skill.setText("");
            }
        };
        radioYes.addChangeListener(skillChangeListener);
        
        ChangeListener equipmentChangeListener = (ChangeEvent change) -> {
            AbstractButton aButton = (AbstractButton)change.getSource();
            ButtonModel aModel = aButton.getModel();
            boolean selected = aModel.isSelected();
            
            if (selected) {
                hp.setEditable(false);
                hp.setBackground(Color.LIGHT_GRAY);
                hp.setText("");
                mp.setEditable(false);
                mp.setBackground(Color.LIGHT_GRAY);
                mp.setText("");
                
                damage.setEditable(false);
                damage.setBackground(Color.LIGHT_GRAY);
                damage.setText("");
            } else {
                hp.setEditable(true);
                hp.setBackground(Color.WHITE);
                hp.setText("");
                mp.setEditable(true);
                mp.setBackground(Color.WHITE);
                mp.setText(""); 
                
                damage.setEditable(true);
                damage.setBackground(Color.WHITE);
                damage.setText("");
            }
        };
        radioEquip.addChangeListener(equipmentChangeListener);
        
        ChangeListener weaponChangeListener = (ChangeEvent change) -> {
            AbstractButton aButton = (AbstractButton)change.getSource();
            ButtonModel aModel = aButton.getModel();
            boolean selected = aModel.isSelected();
            
            if (selected) {
                hp.setEditable(false);
                hp.setBackground(Color.LIGHT_GRAY);
                mp.setText("");
                mp.setEditable(false);
                mp.setBackground(Color.LIGHT_GRAY);
                mp.setText("");
                
                armor.setEditable(false);
                armor.setBackground(Color.LIGHT_GRAY);
                armor.setText("");
                
                water.setEditable(false);
                water.setBackground(Color.LIGHT_GRAY);
                water.setText("");
                fire.setEditable(false);
                fire.setBackground(Color.LIGHT_GRAY);
                fire.setText("");
                earth.setEditable(false);
                earth.setBackground(Color.LIGHT_GRAY);
                earth.setText("");
                light.setEditable(false);
                light.setBackground(Color.LIGHT_GRAY);
                light.setText("");
                wind.setEditable(false);
                wind.setBackground(Color.LIGHT_GRAY);
                wind.setText("");
                black.setEditable(false);
                black.setBackground(Color.LIGHT_GRAY);
                black.setText("");
            } else {
                hp.setEditable(true);
                hp.setBackground(Color.WHITE);
                mp.setText("");
                mp.setEditable(true);
                mp.setBackground(Color.WHITE);
                mp.setText("");
                
                armor.setEditable(true);
                armor.setBackground(Color.WHITE);
                armor.setText("");
                
                water.setEditable(true);
                water.setBackground(Color.WHITE);
                water.setText("");
                fire.setEditable(true);
                fire.setBackground(Color.WHITE);
                fire.setText("");
                earth.setEditable(true);
                earth.setBackground(Color.WHITE);
                earth.setText("");
                light.setEditable(true);
                light.setBackground(Color.WHITE);
                light.setText("");
                wind.setEditable(true);
                wind.setBackground(Color.WHITE);
                wind.setText("");
                black.setEditable(true);
                black.setBackground(Color.WHITE);
                black.setText("");
            }
        };
        radioWeapon.addChangeListener(weaponChangeListener);
        
        ChangeListener potionChangeListener = (ChangeEvent change) -> {
            AbstractButton aButton = (AbstractButton)change.getSource();
            ButtonModel aModel = aButton.getModel();
            boolean selected = aModel.isSelected();
            
            if (selected) {
                con.setEditable(false);
                con.setBackground(Color.LIGHT_GRAY);
                con.setText("");
                wil.setEditable(false);
                wil.setBackground(Color.LIGHT_GRAY);
                wil.setText("");
                vig.setEditable(false);
                vig.setBackground(Color.LIGHT_GRAY);
                vig.setText("");
                wis.setEditable(false);
                wis.setBackground(Color.LIGHT_GRAY);
                wis.setText("");
                str.setEditable(false);
                str.setBackground(Color.LIGHT_GRAY);
                str.setText("");
                Int.setEditable(false);
                Int.setBackground(Color.LIGHT_GRAY);
                Int.setText("");
                dex.setEditable(false);
                dex.setBackground(Color.LIGHT_GRAY);
                dex.setText("");
                
                armor.setEditable(false);
                armor.setBackground(Color.LIGHT_GRAY);
                armor.setText("");
                damage.setEditable(false);
                damage.setBackground(Color.LIGHT_GRAY);
                damage.setText("");
                
                water.setEditable(false);
                water.setBackground(Color.LIGHT_GRAY);
                water.setText("");
                fire.setEditable(false);
                fire.setBackground(Color.LIGHT_GRAY);
                fire.setText("");
                earth.setEditable(false);
                earth.setBackground(Color.LIGHT_GRAY);
                earth.setText("");
                light.setEditable(false);
                light.setBackground(Color.LIGHT_GRAY);
                light.setText("");
                wind.setEditable(false);
                wind.setBackground(Color.LIGHT_GRAY);
                wind.setText("");
                black.setEditable(false);
                black.setBackground(Color.LIGHT_GRAY);
                black.setText("");
            } else {
                con.setEditable(true);
                con.setBackground(Color.WHITE);
                con.setText("");
                wil.setEditable(true);
                wil.setBackground(Color.WHITE);
                wil.setText("");
                vig.setEditable(true);
                vig.setBackground(Color.WHITE);
                vig.setText("");
                wis.setEditable(true);
                wis.setBackground(Color.WHITE);
                wis.setText("");
                str.setEditable(true);
                str.setBackground(Color.WHITE);
                str.setText("");
                Int.setEditable(true);
                Int.setBackground(Color.WHITE);
                Int.setText("");
                dex.setEditable(true);
                dex.setBackground(Color.WHITE);
                dex.setText("");
                
                armor.setEditable(true);
                armor.setBackground(Color.WHITE);
                armor.setText("");
                damage.setEditable(true);
                damage.setBackground(Color.WHITE);
                damage.setText("");
                
                water.setEditable(true);
                water.setBackground(Color.WHITE);
                water.setText("");
                fire.setEditable(true);
                fire.setBackground(Color.WHITE);
                fire.setText("");
                earth.setEditable(true);
                earth.setBackground(Color.WHITE);
                earth.setText("");
                light.setEditable(true);
                light.setBackground(Color.WHITE);
                light.setText("");
                wind.setEditable(true);
                wind.setBackground(Color.WHITE);
                wind.setText("");
                black.setEditable(true);
                black.setBackground(Color.WHITE);
                black.setText("");
            }
        };
        radioPotion.addChangeListener(potionChangeListener);
        
        if (radioEquip.isSelected()) {
            hp.setEditable(false);
            hp.setBackground(Color.LIGHT_GRAY);
            hp.setText("");
            mp.setEditable(false);
            mp.setBackground(Color.LIGHT_GRAY);
            mp.setText("");

            damage.setEditable(false);
            damage.setBackground(Color.LIGHT_GRAY);
            damage.setText("");
        }
        
        if (radioWeapon.isSelected()) {
            hp.setEditable(false);
            hp.setBackground(Color.LIGHT_GRAY);
            hp.setText("");
            mp.setEditable(false);
            mp.setBackground(Color.LIGHT_GRAY);
            mp.setText("");

            armor.setEditable(false);
            armor.setBackground(Color.LIGHT_GRAY);
            armor.setText("");

            water.setEditable(false);
            water.setBackground(Color.LIGHT_GRAY);
            water.setText("");
            fire.setEditable(false);
            fire.setBackground(Color.LIGHT_GRAY);
            fire.setText("");
            earth.setEditable(false);
            earth.setBackground(Color.LIGHT_GRAY);
            earth.setText("");
            light.setEditable(false);
            light.setBackground(Color.LIGHT_GRAY);
            light.setText("");
            wind.setEditable(false);
            wind.setBackground(Color.LIGHT_GRAY);
            wind.setText("");
            black.setEditable(false);
            black.setBackground(Color.LIGHT_GRAY);
            black.setText("");
        }
        
        if (radioPotion.isSelected()) {
            con.setEditable(false);
            con.setBackground(Color.LIGHT_GRAY);
            con.setText("");
            wil.setEditable(false);
            wil.setBackground(Color.LIGHT_GRAY);
            wil.setText("");
            vig.setEditable(false);
            vig.setBackground(Color.LIGHT_GRAY);
            vig.setText("");
            wis.setEditable(false);
            wis.setBackground(Color.LIGHT_GRAY);
            wis.setText("");
            str.setEditable(false);
            str.setBackground(Color.LIGHT_GRAY);
            str.setText("");
            Int.setEditable(false);
            Int.setBackground(Color.LIGHT_GRAY);
            Int.setText("");
            dex.setEditable(false);
            dex.setBackground(Color.LIGHT_GRAY);
            dex.setText("");

            armor.setEditable(false);
            armor.setBackground(Color.LIGHT_GRAY);
            armor.setText("");
            damage.setEditable(false);
            damage.setBackground(Color.LIGHT_GRAY);
            damage.setText("");

            water.setEditable(false);
            water.setBackground(Color.LIGHT_GRAY);
            water.setText("");
            fire.setEditable(false);
            fire.setBackground(Color.LIGHT_GRAY);
            fire.setText("");
            earth.setEditable(false);
            earth.setBackground(Color.LIGHT_GRAY);
            earth.setText("");
            light.setEditable(false);
            light.setBackground(Color.LIGHT_GRAY);
            light.setText("");
            wind.setEditable(false);
            wind.setBackground(Color.LIGHT_GRAY);
            wind.setText("");
            black.setEditable(false);
            black.setBackground(Color.LIGHT_GRAY);
            black.setText("");
        }
    }//GEN-LAST:event_formWindowActivated

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JanelaAlteraFichaIten.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JanelaAlteraFichaIten.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JanelaAlteraFichaIten.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JanelaAlteraFichaIten.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JanelaAlteraFichaIten().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Int;
    private javax.swing.JTextField armor;
    private javax.swing.JTextField black;
    private javax.swing.JCheckBox blackE;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JTextField con;
    private javax.swing.JTextField damage;
    private javax.swing.JTextArea description;
    private javax.swing.JTextField dex;
    private javax.swing.JTextField earth;
    private javax.swing.JCheckBox earthE;
    private javax.swing.JTextField fire;
    private javax.swing.JCheckBox fireE;
    private javax.swing.JTextField hp;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField light;
    private javax.swing.JCheckBox lightE;
    private javax.swing.JTextField mp;
    private javax.swing.JTextField name;
    private javax.swing.JCheckBox neutralE;
    private javax.swing.JRadioButton radioCustom;
    private javax.swing.JRadioButton radioEquip;
    private javax.swing.JRadioButton radioNo;
    private javax.swing.JRadioButton radioPotion;
    private javax.swing.JRadioButton radioWeapon;
    private javax.swing.JRadioButton radioYes;
    private javax.swing.JTextField skill;
    private javax.swing.JTextField str;
    private javax.swing.JTextField vig;
    private javax.swing.JTextField water;
    private javax.swing.JCheckBox waterE;
    private javax.swing.JTextField wil;
    private javax.swing.JTextField wind;
    private javax.swing.JCheckBox windE;
    private javax.swing.JTextField wis;
    // End of variables declaration//GEN-END:variables
}
